#kubectl -n company create serviceaccount company-admin
apiVersion: v1
kind: Secret
metadata:
  name: company-admin-secret
  namespace: company
  annotations:
    kubernetes.io/service-account.name: company-admin
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-reader
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-reader
subjects:
- kind: ServiceAccount
  name: company-admin
  namespace: company
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: company-admin
  namespace: company
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "deletecollection", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: company-admin-binding
  namespace: company
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: company-admin
subjects:
- kind: ServiceAccount
  name: company-admin
  namespace: company